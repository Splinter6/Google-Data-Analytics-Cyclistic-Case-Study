/*
1. INITIAL SETUP
*/

## VIEW REPORTS ##
-- OUTLINE
a. Null Report
b. Distinct Value Report
c. 

-- (A) Create new rows to improve manipulation of data



#  --NULL REPORT

WITH schema_info AS (
SELECT
  'ride_id' AS field_name,
  COUNTIF(ride_id IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'rideable_type' AS field_name,
  COUNTIF(rideable_type IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'started_at' AS field_name,
  COUNTIF(started_at IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'ended_at' AS field_name,
  COUNTIF(ended_at IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'start_station_name' AS field_name,
  COUNTIF(start_station_name IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'start_station_id' AS field_name,
  COUNTIF(start_station_id IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'end_station_name' AS field_name,
  COUNTIF(end_station_name IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'end_station_id' AS field_name,
  COUNTIF(end_station_id IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'start_lat' AS field_name,
  COUNTIF(start_lat IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'start_lng' AS field_name,
  COUNTIF(start_lng IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'end_lat' AS field_name,
  COUNTIF(end_lat IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'end_lng' AS field_name,
  COUNTIF(end_lng IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT
  'member_casual' AS field_name,
  COUNTIF(member_casual IS NULL) AS null_count
FROM `cyclistic-data-strategy.555.ALL`
),


total_nulls AS (
SELECT
  SUM(null_count) AS total_null_count
FROM schema_info
),

total_entries AS (
SELECT
  COUNT(ride_id) AS total_entries
FROM `cyclistic-data-strategy.555.ALL`
),


totals AS (
 SELECT
   s.field_name,
   s.null_count,
   ROUND((s.null_count / (SELECT COUNT(1) FROM `cyclistic-data-strategy.555.ALL`)) * 100, 2) AS null_percentage,
   CASE
     WHEN ROW_NUMBER() OVER () <= 13 THEN CAST(e.total_entries AS STRING)
     ELSE ''
   END AS total_entries
 FROM schema_info s
 LEFT JOIN total_nulls t ON 1=1
 CROSS JOIN total_entries e
 UNION ALL
 SELECT
   'NULL TOTALS' AS field_name,
   t.total_null_count AS null_count,
   ROUND((t.total_null_count / (SELECT COUNT(1) FROM `cyclistic-data-strategy.555.ALL`)) * 100, 2) AS null_percentage,
   '' AS total_entries
 FROM total_nulls t
)


SELECT *
FROM totals
ORDER BY totals.null_count DESC NULLS LAST;



-- Distinct Counts Report:

SELECT 'ride_id' AS column_name, COUNT(DISTINCT ride_id) AS count FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'rideable_type', COUNT(DISTINCT rideable_type) FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'started_at', COUNT(DISTINCT started_at) FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'ended_at', COUNT(DISTINCT ended_at) FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'start_station_name', COUNT(DISTINCT start_station_name) FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'start_station_id', COUNT(DISTINCT start_station_id) FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'end_station_name', COUNT(DISTINCT end_station_name) FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'end_station_id', COUNT(DISTINCT end_station_id) FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'start_lat', COUNT(DISTINCT start_lat) FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'start_lng', COUNT(DISTINCT start_lng) FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'end_lat', COUNT(DISTINCT end_lat) FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'end_lng', COUNT(DISTINCT end_lng) FROM `cyclistic-data-strategy.555.ALL`
UNION ALL
SELECT 'member_casual', COUNT(DISTINCT member_casual) FROM `cyclistic-data-strategy.555.ALL`;


-- ###   IRREGULAR PATTERN REPORT ###

ITH counts AS (
  SELECT 
    'start_station_starts_with_space' AS pattern, COUNTIF(REGEXP_CONTAINS(start_station_name, r'^ ')) AS count FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_ends_with_space', COUNTIF(REGEXP_CONTAINS(start_station_name, r' $')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_ends_with_asterisk', COUNTIF(REGEXP_CONTAINS(start_station_name, r'\*$')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_ends_with_midblock', COUNTIF(REGEXP_CONTAINS(start_station_name, r' - midblock$')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_contains_test', COUNTIF(REGEXP_CONTAINS(start_station_name, r'test')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_contains_temp', COUNTIF(REGEXP_CONTAINS(start_station_name, r'Temp')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_contains_repair', COUNTIF(REGEXP_CONTAINS(start_station_name, r'repair')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_contains_charging', COUNTIF(REGEXP_CONTAINS(start_station_name, r'Charging')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_contains_asterisk', COUNTIF(REGEXP_CONTAINS(start_station_name, r'\*')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_contains_TEST', COUNTIF(REGEXP_CONTAINS(start_station_name, r'TEST')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_is_lyft_driver_center_private_rack', COUNTIF(REGEXP_CONTAINS(start_station_name, r'^Lyft$')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_is_buckingham_fountain', COUNTIF(REGEXP_CONTAINS(start_station_name, r'Buckingham - Fountain')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'start_station_is_mason_archer', COUNTIF(REGEXP_CONTAINS(start_station_name, r'Mason & Archer')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_starts_with_space', COUNTIF(REGEXP_CONTAINS(end_station_name, r'^ ')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_ends_with_space', COUNTIF(REGEXP_CONTAINS(end_station_name, r' $')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_ends_with_asterisk', COUNTIF(REGEXP_CONTAINS(end_station_name, r'\*$')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_ends_with_midblock', COUNTIF(REGEXP_CONTAINS(end_station_name, r' - midblock$')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_contains_test', COUNTIF(REGEXP_CONTAINS(end_station_name, r'test')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_contains_temp', COUNTIF(REGEXP_CONTAINS(end_station_name, r'Temp')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_contains_repair', COUNTIF(REGEXP_CONTAINS(end_station_name, r'repair')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_contains_charging', COUNTIF(REGEXP_CONTAINS(end_station_name, r'Charging')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_contains_asterisk', COUNTIF(REGEXP_CONTAINS(end_station_name, r'\*')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_contains_TEST', COUNTIF(REGEXP_CONTAINS(end_station_name, r'TEST')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_is_divvy_cassette_repair_mobile_station', COUNTIF(REGEXP_CONTAINS(end_station_name, r'^DIVVY CASSETTE REPAIR MOBILE STATION$')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_is_lyft_driver_center_private_rack', COUNTIF(REGEXP_CONTAINS(end_station_name, r'^Lyft$')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_is_351', COUNTIF(REGEXP_CONTAINS(end_station_name, r'^351$')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_is_base_2132_w_hubbard_warehouse', COUNTIF(REGEXP_CONTAINS(end_station_name, r'^Base - 2132 W Hubbard Warehouse$')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_is_hubbard_bike_checking', COUNTIF(REGEXP_CONTAINS(end_station_name, r'Hubbard Bike-checking \(LBS-WH-TEST\)')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_public_rack', COUNTIF(REGEXP_CONTAINS(end_station_name, r'Public Rack - ')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_buckingham_fountain', COUNTIF(REGEXP_CONTAINS(end_station_name, r'Buckingham - Fountain')) FROM `cyclistic-data-strategy.555.ALL`
  UNION ALL
  SELECT 
    'end_station_mason_archer', COUNTIF(REGEXP_CONTAINS(end_station_name, r'Mason & Archer')) FROM `cyclistic-data-strategy.555.ALL`
)

SELECT pattern, count
FROM counts
WHERE count > 0;
