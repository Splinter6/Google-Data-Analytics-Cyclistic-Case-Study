3. ANALYZE Member riders vs. Casual





--                    ## Count Total Trips M vs C
SELECT 
        TotalTrips,
        TotalMemberTrips,
        TotalCasualTrips,
        ROUND(TotalMemberTrips/TotalTrips,2)*100 AS MemberPercentage,
        ROUND(TotalCasualTrips/TotalTrips,2)*100 AS CasualPercentage
FROM 
        (
        SELECT
                COUNT(ride_id) AS TotalTrips,
                COUNTIF(member_casual = 'member') AS TotalMemberTrips,
                COUNTIF(member_casual = 'casual') AS TotalCasualTrips,
        FROM



--                        ## Trips by user and bike type

WITH TotalCounts AS (
    SELECT COUNT(*) AS TotalRideNumber
    FROM `cyclistic-data-strategy.555.ALLCLEAN`
)
SELECT
    member_casual,
    rideable_type,
    COUNT(*) AS TotalTrips,
    ROUND((COUNT(*) / TotalCounts.TotalRideNumber) * 100, 1) AS PercentageOfTotal,
    TotalCounts.TotalRideNumber
FROM
    `cyclistic-data-strategy.555.ALLCLEAN`,
    TotalCounts
GROUP BY
    member_casual,
    rideable_type,
    TotalRideNumber
ORDER BY
    TotalTrips DESC;


--                        ##        TRIP COUNT X DAY OF WEEK


SELECT COUNT(rideable_type) as rides_taken,
  day,
  member_casual,
FROM 
data
GROUP BY member_casual, day
ORDER BY member_casual



--                        ##        Day of Week

SELECT
    dayofweek,
    COUNT(*) AS TotalTrips,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberTrips,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualTrips
FROM
    `cyclistic-data-strategy.555.ALLCLEAN`
GROUP BY
    dayofweek


--                        ##         DAY OF MONTH

SELECT
    DayofMonth,
    COUNT(*) AS TotalTrips,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberTrips,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualTrips
FROM
    `cyclistic-data-strategy.555.ALLCLEAN`
GROUP BY
    DayofMonth
ORDER BY
    DayofMonth
LIMIT 10;

--                        ##        MONTH

SELECT
    month,
    COUNT(*) AS TotalTrips,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberTrips,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualTrips
FROM
    `cyclistic-data-strategy.555.ALLCLEAN`
GROUP BY
    month
ORDER BY
    month;


--                         ##        Most popular time of day

Most popular time of day to ride
SELECT
    timeofday,
    COUNT(*) AS TotalTrips,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberTrips,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualTrips
FROM
    `cyclistic-data-strategy.555.ALLCLEAN`
GROUP BY
    timeofday
ORDER BY
    timeofday;

--                        ##        Time of day by Season

WITH CategorizedTrips AS (
    SELECT
        CASE
            WHEN EXTRACT(HOUR FROM started_at) BETWEEN 6 AND 11 THEN 'Morning  (6-11am)'
            WHEN EXTRACT(HOUR FROM started_at) BETWEEN 12 AND 17 THEN 'Afternoon(12-5pm)'
            WHEN EXTRACT(HOUR FROM started_at) BETWEEN 18 AND 23 THEN 'Evening  (6-11pm)'
            ELSE 'Night       (12-5am)'
        END AS time_of_day,
        COUNT(*) AS TotalTrips,
        COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberTrips,
        COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualTrips
    FROM
        `cyclistic-data-strategy.555.ALLCLEAN`
    GROUP BY
        time_of_day
)
SELECT
    time_of_day,
    TotalTrips,
    MemberTrips,
    CasualTrips
FROM
    CategorizedTrips
ORDER BY
    CASE
        WHEN time_of_day = 'Morning' THEN 1
        WHEN time_of_day = 'Afternoon' THEN 2
        WHEN time_of_day = 'Evening' THEN 3
        ELSE 4
    END


--                        ##        RIDE DURATIONS

avg, max, mode

--                        ##       AVG, MAX, MODE Duration

WITH Durations AS (
    SELECT
        member_casual,
        dur_m,
        dur_h
    FROM
        `cyclistic-data-strategy.555.ALLCLEAN`
),
ModeDurations AS (
    SELECT
        member_casual,
        dur_m,
        COUNT(*) AS frequency,
        ROW_NUMBER() OVER (PARTITION BY member_casual ORDER BY COUNT(*) DESC) AS rn
    FROM
        Durations
    GROUP BY
        member_casual, dur_m
)
SELECT
    d.member_casual,
    ROUND(AVG(d.dur_m),2) AS Avg_Duration_minutes,
    MAX(d.dur_h) AS Max_Duration_in_hours,
    m.dur_m AS Mode_Duration_minutes
FROM
    Durations d
JOIN
    ModeDurations m ON d.member_casual = m.member_casual AND m.rn = 1
GROUP BY
    d.member_casual, m.dur_m
ORDER BY
    d.member_casual;



--                        ##        Trip count by day of week

-- ***count rides taken by members and casual users on each day of the week

SELECT COUNT(rideable_type) as rides_taken,
  day,
  member_casual,
FROM 
data
GROUP BY member_casual, day
ORDER BY member_casual


--                        ###        RIDE COUNT X DAY OF WEEK X MEMBER TYPE

SELECT 
  dayofweek,
  COUNT(CASE WHEN member_casual = 'member' THEN rideable_type END) AS member_rides,
  COUNT(CASE WHEN member_casual = 'casual' THEN rideable_type END) AS casual_rides
FROM 
  `cyclistic-data-strategy.555.ALLCLEAN`
GROUP BY 
  dayofweek
ORDER BY 
  member_rides ASC;


--                      ###        RIDE COUNT BY HOUR     


















--                        ###

WITH MemberData AS (
  SELECT
    started_at,
    ended_at,
    dur_m,
    start_station_name,
    end_station_name,
    member_casual
  FROM
    `cyclistic-data-strategy.555.ALL`
  WHERE
    member_casual = 'member'
),
CasualData AS (
  SELECT
    started_at,
    ended_at,
    dur_m,
    start_station_name,
    end_station_name,
    member_casual
  FROM
    `cyclistic-data-strategy.555.ALL`
  WHERE
    member_casual = 'casual'
)

-- Compare average trip durations of Members vs Casual users
SELECT
  'Member' AS user_type,
  AVG(dur_m) AS average_trip_duration
FROM
  MemberData
UNION ALL
SELECT
  'Casual' AS user_type,
  AVG(dur_m) AS average_trip_duration
FROM
  CasualData;
